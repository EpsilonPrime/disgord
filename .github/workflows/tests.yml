on:
  push:
    branches:
      - develop
name: integration tests
jobs:
  integration-tests:
    name: Integration tests & code coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        go: ['1.13']
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Check out code
        uses: actions/checkout@master
      - name: Get dependencies
        run: go mod download
      - name: Format Test
        run: diff <(gofmt -d ./...) <(echo -n)
      - name: Integration tests
        env:
          DISGORD_TOKEN_INTEGRATION_TEST: ${{ secrets.DISGORD_TOKEN_INTEGRATION_TEST }}
        run: go test -v -race -tags=integration -coverprofile=coverage-integration.txt -covermode=atomic ./...
      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_TOKEN}} -B develop -c -F integration -f "./coverage-integration.txt" -Z
  unit-tests:
    name: unit tests & code coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        go: ['1.13', '1.14']
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Check out code
        uses: actions/checkout@master
      - name: Get dependencies
        run: go mod download
      - name: Format Test
        run: diff <(gofmt -d ./...) <(echo -n)
      - name: unit tests
        env:
          DISGORD_TOKEN_INTEGRATION_TEST: ${{ secrets.DISGORD_TOKEN_INTEGRATION_TEST }}
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_TOKEN}} -B develop -c -F unit -f "./coverage.txt" -Z

